//go:build !ignore_autogenerated

// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	corev1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIIntegrationResponse) DeepCopyInto(out *APIIntegrationResponse) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIIntegrationResponse.
func (in *APIIntegrationResponse) DeepCopy() *APIIntegrationResponse {
	if in == nil {
		return nil
	}
	out := new(APIIntegrationResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIIntegrationResponse) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIIntegrationResponseList) DeepCopyInto(out *APIIntegrationResponseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]APIIntegrationResponse, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIIntegrationResponseList.
func (in *APIIntegrationResponseList) DeepCopy() *APIIntegrationResponseList {
	if in == nil {
		return nil
	}
	out := new(APIIntegrationResponseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIIntegrationResponseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIIntegrationResponseSpec) DeepCopyInto(out *APIIntegrationResponseSpec) {
	*out = *in
	if in.ContentHandling != nil {
		in, out := &in.ContentHandling, &out.ContentHandling
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceRef != nil {
		in, out := &in.ResourceRef, &out.ResourceRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
	if in.ResponseParameters != nil {
		in, out := &in.ResponseParameters, &out.ResponseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResponseTemplates != nil {
		in, out := &in.ResponseTemplates, &out.ResponseTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIRef != nil {
		in, out := &in.RestAPIRef, &out.RestAPIRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
	if in.SelectionPattern != nil {
		in, out := &in.SelectionPattern, &out.SelectionPattern
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIIntegrationResponseSpec.
func (in *APIIntegrationResponseSpec) DeepCopy() *APIIntegrationResponseSpec {
	if in == nil {
		return nil
	}
	out := new(APIIntegrationResponseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIIntegrationResponseStatus) DeepCopyInto(out *APIIntegrationResponseStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIIntegrationResponseStatus.
func (in *APIIntegrationResponseStatus) DeepCopy() *APIIntegrationResponseStatus {
	if in == nil {
		return nil
	}
	out := new(APIIntegrationResponseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKey) DeepCopyInto(out *APIKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKey.
func (in *APIKey) DeepCopy() *APIKey {
	if in == nil {
		return nil
	}
	out := new(APIKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyList) DeepCopyInto(out *APIKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]APIKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyList.
func (in *APIKeyList) DeepCopy() *APIKeyList {
	if in == nil {
		return nil
	}
	out := new(APIKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeySpec) DeepCopyInto(out *APIKeySpec) {
	*out = *in
	if in.CustomerID != nil {
		in, out := &in.CustomerID, &out.CustomerID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.GenerateDistinctID != nil {
		in, out := &in.GenerateDistinctID, &out.GenerateDistinctID
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StageKeys != nil {
		in, out := &in.StageKeys, &out.StageKeys
		*out = make([]*StageKey, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(StageKey)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(corev1alpha1.SecretKeyReference)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeySpec.
func (in *APIKeySpec) DeepCopy() *APIKeySpec {
	if in == nil {
		return nil
	}
	out := new(APIKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKeyStatus) DeepCopyInto(out *APIKeyStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastUpdatedDate != nil {
		in, out := &in.LastUpdatedDate, &out.LastUpdatedDate
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKeyStatus.
func (in *APIKeyStatus) DeepCopy() *APIKeyStatus {
	if in == nil {
		return nil
	}
	out := new(APIKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIKey_SDK) DeepCopyInto(out *APIKey_SDK) {
	*out = *in
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.CustomerID != nil {
		in, out := &in.CustomerID, &out.CustomerID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.LastUpdatedDate != nil {
		in, out := &in.LastUpdatedDate, &out.LastUpdatedDate
		*out = (*in).DeepCopy()
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StageKeys != nil {
		in, out := &in.StageKeys, &out.StageKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIKey_SDK.
func (in *APIKey_SDK) DeepCopy() *APIKey_SDK {
	if in == nil {
		return nil
	}
	out := new(APIKey_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMethodResponse) DeepCopyInto(out *APIMethodResponse) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMethodResponse.
func (in *APIMethodResponse) DeepCopy() *APIMethodResponse {
	if in == nil {
		return nil
	}
	out := new(APIMethodResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIMethodResponse) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMethodResponseList) DeepCopyInto(out *APIMethodResponseList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]APIMethodResponse, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMethodResponseList.
func (in *APIMethodResponseList) DeepCopy() *APIMethodResponseList {
	if in == nil {
		return nil
	}
	out := new(APIMethodResponseList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *APIMethodResponseList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMethodResponseSpec) DeepCopyInto(out *APIMethodResponseSpec) {
	*out = *in
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceRef != nil {
		in, out := &in.ResourceRef, &out.ResourceRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
	if in.ResponseModels != nil {
		in, out := &in.ResponseModels, &out.ResponseModels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResponseParameters != nil {
		in, out := &in.ResponseParameters, &out.ResponseParameters
		*out = make(map[string]*bool, len(*in))
		for key, val := range *in {
			var outVal *bool
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(bool)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIRef != nil {
		in, out := &in.RestAPIRef, &out.RestAPIRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMethodResponseSpec.
func (in *APIMethodResponseSpec) DeepCopy() *APIMethodResponseSpec {
	if in == nil {
		return nil
	}
	out := new(APIMethodResponseSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIMethodResponseStatus) DeepCopyInto(out *APIMethodResponseStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIMethodResponseStatus.
func (in *APIMethodResponseStatus) DeepCopy() *APIMethodResponseStatus {
	if in == nil {
		return nil
	}
	out := new(APIMethodResponseStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *APIStage) DeepCopyInto(out *APIStage) {
	*out = *in
	if in.APIID != nil {
		in, out := &in.APIID, &out.APIID
		*out = new(string)
		**out = **in
	}
	if in.Stage != nil {
		in, out := &in.Stage, &out.Stage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new APIStage.
func (in *APIStage) DeepCopy() *APIStage {
	if in == nil {
		return nil
	}
	out := new(APIStage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AccessLogSettings) DeepCopyInto(out *AccessLogSettings) {
	*out = *in
	if in.DestinationARN != nil {
		in, out := &in.DestinationARN, &out.DestinationARN
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AccessLogSettings.
func (in *AccessLogSettings) DeepCopy() *AccessLogSettings {
	if in == nil {
		return nil
	}
	out := new(AccessLogSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Authorizer) DeepCopyInto(out *Authorizer) {
	*out = *in
	if in.AuthType != nil {
		in, out := &in.AuthType, &out.AuthType
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerCredentials != nil {
		in, out := &in.AuthorizerCredentials, &out.AuthorizerCredentials
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerResultTTLInSeconds != nil {
		in, out := &in.AuthorizerResultTTLInSeconds, &out.AuthorizerResultTTLInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.AuthorizerURI != nil {
		in, out := &in.AuthorizerURI, &out.AuthorizerURI
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IdentitySource != nil {
		in, out := &in.IdentitySource, &out.IdentitySource
		*out = new(string)
		**out = **in
	}
	if in.IdentityValidationExpression != nil {
		in, out := &in.IdentityValidationExpression, &out.IdentityValidationExpression
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Authorizer.
func (in *Authorizer) DeepCopy() *Authorizer {
	if in == nil {
		return nil
	}
	out := new(Authorizer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BasePathMapping) DeepCopyInto(out *BasePathMapping) {
	*out = *in
	if in.BasePath != nil {
		in, out := &in.BasePath, &out.BasePath
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.Stage != nil {
		in, out := &in.Stage, &out.Stage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BasePathMapping.
func (in *BasePathMapping) DeepCopy() *BasePathMapping {
	if in == nil {
		return nil
	}
	out := new(BasePathMapping)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CanarySettings) DeepCopyInto(out *CanarySettings) {
	*out = *in
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.PercentTraffic != nil {
		in, out := &in.PercentTraffic, &out.PercentTraffic
		*out = new(float64)
		**out = **in
	}
	if in.StageVariableOverrides != nil {
		in, out := &in.StageVariableOverrides, &out.StageVariableOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseStageCache != nil {
		in, out := &in.UseStageCache, &out.UseStageCache
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CanarySettings.
func (in *CanarySettings) DeepCopy() *CanarySettings {
	if in == nil {
		return nil
	}
	out := new(CanarySettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClientCertificate) DeepCopyInto(out *ClientCertificate) {
	*out = *in
	if in.ClientCertificateID != nil {
		in, out := &in.ClientCertificateID, &out.ClientCertificateID
		*out = new(string)
		**out = **in
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = (*in).DeepCopy()
	}
	if in.PemEncodedCertificate != nil {
		in, out := &in.PemEncodedCertificate, &out.PemEncodedCertificate
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClientCertificate.
func (in *ClientCertificate) DeepCopy() *ClientCertificate {
	if in == nil {
		return nil
	}
	out := new(ClientCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Deployment) DeepCopyInto(out *Deployment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Deployment.
func (in *Deployment) DeepCopy() *Deployment {
	if in == nil {
		return nil
	}
	out := new(Deployment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Deployment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentCanarySettings) DeepCopyInto(out *DeploymentCanarySettings) {
	*out = *in
	if in.PercentTraffic != nil {
		in, out := &in.PercentTraffic, &out.PercentTraffic
		*out = new(float64)
		**out = **in
	}
	if in.StageVariableOverrides != nil {
		in, out := &in.StageVariableOverrides, &out.StageVariableOverrides
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UseStageCache != nil {
		in, out := &in.UseStageCache, &out.UseStageCache
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentCanarySettings.
func (in *DeploymentCanarySettings) DeepCopy() *DeploymentCanarySettings {
	if in == nil {
		return nil
	}
	out := new(DeploymentCanarySettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentList) DeepCopyInto(out *DeploymentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Deployment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentList.
func (in *DeploymentList) DeepCopy() *DeploymentList {
	if in == nil {
		return nil
	}
	out := new(DeploymentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DeploymentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentSpec) DeepCopyInto(out *DeploymentSpec) {
	*out = *in
	if in.CacheClusterEnabled != nil {
		in, out := &in.CacheClusterEnabled, &out.CacheClusterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheClusterSize != nil {
		in, out := &in.CacheClusterSize, &out.CacheClusterSize
		*out = new(string)
		**out = **in
	}
	if in.CanarySettings != nil {
		in, out := &in.CanarySettings, &out.CanarySettings
		*out = new(DeploymentCanarySettings)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIRef != nil {
		in, out := &in.RestAPIRef, &out.RestAPIRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
	if in.StageDescription != nil {
		in, out := &in.StageDescription, &out.StageDescription
		*out = new(string)
		**out = **in
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
	if in.TracingEnabled != nil {
		in, out := &in.TracingEnabled, &out.TracingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentSpec.
func (in *DeploymentSpec) DeepCopy() *DeploymentSpec {
	if in == nil {
		return nil
	}
	out := new(DeploymentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DeploymentStatus) DeepCopyInto(out *DeploymentStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.APISummary != nil {
		in, out := &in.APISummary, &out.APISummary
		*out = make(map[string]map[string]*MethodSnapshot, len(*in))
		for key, val := range *in {
			var outVal map[string]*MethodSnapshot
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make(map[string]*MethodSnapshot, len(*in))
				for key, val := range *in {
					var outVal *MethodSnapshot
					if val == nil {
						(*out)[key] = nil
					} else {
						inVal := (*in)[key]
						in, out := &inVal, &outVal
						*out = new(MethodSnapshot)
						(*in).DeepCopyInto(*out)
					}
					(*out)[key] = outVal
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DeploymentStatus.
func (in *DeploymentStatus) DeepCopy() *DeploymentStatus {
	if in == nil {
		return nil
	}
	out := new(DeploymentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Deployment_SDK) DeepCopyInto(out *Deployment_SDK) {
	*out = *in
	if in.APISummary != nil {
		in, out := &in.APISummary, &out.APISummary
		*out = make(map[string]map[string]*MethodSnapshot, len(*in))
		for key, val := range *in {
			var outVal map[string]*MethodSnapshot
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = make(map[string]*MethodSnapshot, len(*in))
				for key, val := range *in {
					var outVal *MethodSnapshot
					if val == nil {
						(*out)[key] = nil
					} else {
						inVal := (*in)[key]
						in, out := &inVal, &outVal
						*out = new(MethodSnapshot)
						(*in).DeepCopyInto(*out)
					}
					(*out)[key] = outVal
				}
			}
			(*out)[key] = outVal
		}
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Deployment_SDK.
func (in *Deployment_SDK) DeepCopy() *Deployment_SDK {
	if in == nil {
		return nil
	}
	out := new(Deployment_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationPart) DeepCopyInto(out *DocumentationPart) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Properties != nil {
		in, out := &in.Properties, &out.Properties
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationPart.
func (in *DocumentationPart) DeepCopy() *DocumentationPart {
	if in == nil {
		return nil
	}
	out := new(DocumentationPart)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationPartLocation) DeepCopyInto(out *DocumentationPartLocation) {
	*out = *in
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationPartLocation.
func (in *DocumentationPartLocation) DeepCopy() *DocumentationPartLocation {
	if in == nil {
		return nil
	}
	out := new(DocumentationPartLocation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DocumentationVersion) DeepCopyInto(out *DocumentationVersion) {
	*out = *in
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DocumentationVersion.
func (in *DocumentationVersion) DeepCopy() *DocumentationVersion {
	if in == nil {
		return nil
	}
	out := new(DocumentationVersion)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainName) DeepCopyInto(out *DomainName) {
	*out = *in
	if in.CertificateARN != nil {
		in, out := &in.CertificateARN, &out.CertificateARN
		*out = new(string)
		**out = **in
	}
	if in.CertificateName != nil {
		in, out := &in.CertificateName, &out.CertificateName
		*out = new(string)
		**out = **in
	}
	if in.CertificateUploadDate != nil {
		in, out := &in.CertificateUploadDate, &out.CertificateUploadDate
		*out = (*in).DeepCopy()
	}
	if in.DistributionDomainName != nil {
		in, out := &in.DistributionDomainName, &out.DistributionDomainName
		*out = new(string)
		**out = **in
	}
	if in.DistributionHostedZoneID != nil {
		in, out := &in.DistributionHostedZoneID, &out.DistributionHostedZoneID
		*out = new(string)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameARN != nil {
		in, out := &in.DomainNameARN, &out.DomainNameARN
		*out = new(string)
		**out = **in
	}
	if in.DomainNameID != nil {
		in, out := &in.DomainNameID, &out.DomainNameID
		*out = new(string)
		**out = **in
	}
	if in.DomainNameStatusMessage != nil {
		in, out := &in.DomainNameStatusMessage, &out.DomainNameStatusMessage
		*out = new(string)
		**out = **in
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(EndpointConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ManagementPolicy != nil {
		in, out := &in.ManagementPolicy, &out.ManagementPolicy
		*out = new(string)
		**out = **in
	}
	if in.OwnershipVerificationCertificateARN != nil {
		in, out := &in.OwnershipVerificationCertificateARN, &out.OwnershipVerificationCertificateARN
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.RegionalCertificateARN != nil {
		in, out := &in.RegionalCertificateARN, &out.RegionalCertificateARN
		*out = new(string)
		**out = **in
	}
	if in.RegionalCertificateName != nil {
		in, out := &in.RegionalCertificateName, &out.RegionalCertificateName
		*out = new(string)
		**out = **in
	}
	if in.RegionalDomainName != nil {
		in, out := &in.RegionalDomainName, &out.RegionalDomainName
		*out = new(string)
		**out = **in
	}
	if in.RegionalHostedZoneID != nil {
		in, out := &in.RegionalHostedZoneID, &out.RegionalHostedZoneID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainName.
func (in *DomainName) DeepCopy() *DomainName {
	if in == nil {
		return nil
	}
	out := new(DomainName)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainNameAccessAssociation) DeepCopyInto(out *DomainNameAccessAssociation) {
	*out = *in
	if in.AccessAssociationSource != nil {
		in, out := &in.AccessAssociationSource, &out.AccessAssociationSource
		*out = new(string)
		**out = **in
	}
	if in.DomainNameAccessAssociationARN != nil {
		in, out := &in.DomainNameAccessAssociationARN, &out.DomainNameAccessAssociationARN
		*out = new(string)
		**out = **in
	}
	if in.DomainNameARN != nil {
		in, out := &in.DomainNameARN, &out.DomainNameARN
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainNameAccessAssociation.
func (in *DomainNameAccessAssociation) DeepCopy() *DomainNameAccessAssociation {
	if in == nil {
		return nil
	}
	out := new(DomainNameAccessAssociation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EndpointConfiguration) DeepCopyInto(out *EndpointConfiguration) {
	*out = *in
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCEndpointIDs != nil {
		in, out := &in.VPCEndpointIDs, &out.VPCEndpointIDs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VPCEndpointRefs != nil {
		in, out := &in.VPCEndpointRefs, &out.VPCEndpointRefs
		*out = make([]*corev1alpha1.AWSResourceReferenceWrapper, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.AWSResourceReferenceWrapper)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EndpointConfiguration.
func (in *EndpointConfiguration) DeepCopy() *EndpointConfiguration {
	if in == nil {
		return nil
	}
	out := new(EndpointConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Integration) DeepCopyInto(out *Integration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Integration.
func (in *Integration) DeepCopy() *Integration {
	if in == nil {
		return nil
	}
	out := new(Integration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Integration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationList) DeepCopyInto(out *IntegrationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Integration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationList.
func (in *IntegrationList) DeepCopy() *IntegrationList {
	if in == nil {
		return nil
	}
	out := new(IntegrationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IntegrationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationResponse) DeepCopyInto(out *IntegrationResponse) {
	*out = *in
	if in.ContentHandling != nil {
		in, out := &in.ContentHandling, &out.ContentHandling
		*out = new(string)
		**out = **in
	}
	if in.ResponseParameters != nil {
		in, out := &in.ResponseParameters, &out.ResponseParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResponseTemplates != nil {
		in, out := &in.ResponseTemplates, &out.ResponseTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SelectionPattern != nil {
		in, out := &in.SelectionPattern, &out.SelectionPattern
		*out = new(string)
		**out = **in
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationResponse.
func (in *IntegrationResponse) DeepCopy() *IntegrationResponse {
	if in == nil {
		return nil
	}
	out := new(IntegrationResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationSpec) DeepCopyInto(out *IntegrationSpec) {
	*out = *in
	if in.CacheKeyParameters != nil {
		in, out := &in.CacheKeyParameters, &out.CacheKeyParameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CacheNamespace != nil {
		in, out := &in.CacheNamespace, &out.CacheNamespace
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionRef != nil {
		in, out := &in.ConnectionRef, &out.ConnectionRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.ContentHandling != nil {
		in, out := &in.ContentHandling, &out.ContentHandling
		*out = new(string)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.IntegrationHTTPMethod != nil {
		in, out := &in.IntegrationHTTPMethod, &out.IntegrationHTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.PassthroughBehavior != nil {
		in, out := &in.PassthroughBehavior, &out.PassthroughBehavior
		*out = new(string)
		**out = **in
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestTemplates != nil {
		in, out := &in.RequestTemplates, &out.RequestTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceRef != nil {
		in, out := &in.ResourceRef, &out.ResourceRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIRef != nil {
		in, out := &in.RestAPIRef, &out.RestAPIRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
	if in.TimeoutInMillis != nil {
		in, out := &in.TimeoutInMillis, &out.TimeoutInMillis
		*out = new(int64)
		**out = **in
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationSpec.
func (in *IntegrationSpec) DeepCopy() *IntegrationSpec {
	if in == nil {
		return nil
	}
	out := new(IntegrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IntegrationStatus) DeepCopyInto(out *IntegrationStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.IntegrationResponses != nil {
		in, out := &in.IntegrationResponses, &out.IntegrationResponses
		*out = make(map[string]*IntegrationResponse, len(*in))
		for key, val := range *in {
			var outVal *IntegrationResponse
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(IntegrationResponse)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IntegrationStatus.
func (in *IntegrationStatus) DeepCopy() *IntegrationStatus {
	if in == nil {
		return nil
	}
	out := new(IntegrationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Integration_SDK) DeepCopyInto(out *Integration_SDK) {
	*out = *in
	if in.CacheKeyParameters != nil {
		in, out := &in.CacheKeyParameters, &out.CacheKeyParameters
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CacheNamespace != nil {
		in, out := &in.CacheNamespace, &out.CacheNamespace
		*out = new(string)
		**out = **in
	}
	if in.ConnectionID != nil {
		in, out := &in.ConnectionID, &out.ConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionType != nil {
		in, out := &in.ConnectionType, &out.ConnectionType
		*out = new(string)
		**out = **in
	}
	if in.ContentHandling != nil {
		in, out := &in.ContentHandling, &out.ContentHandling
		*out = new(string)
		**out = **in
	}
	if in.Credentials != nil {
		in, out := &in.Credentials, &out.Credentials
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.IntegrationResponses != nil {
		in, out := &in.IntegrationResponses, &out.IntegrationResponses
		*out = make(map[string]*IntegrationResponse, len(*in))
		for key, val := range *in {
			var outVal *IntegrationResponse
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(IntegrationResponse)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.PassthroughBehavior != nil {
		in, out := &in.PassthroughBehavior, &out.PassthroughBehavior
		*out = new(string)
		**out = **in
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestTemplates != nil {
		in, out := &in.RequestTemplates, &out.RequestTemplates
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeoutInMillis != nil {
		in, out := &in.TimeoutInMillis, &out.TimeoutInMillis
		*out = new(int64)
		**out = **in
	}
	if in.TLSConfig != nil {
		in, out := &in.TLSConfig, &out.TLSConfig
		*out = new(TLSConfig)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.URI != nil {
		in, out := &in.URI, &out.URI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Integration_SDK.
func (in *Integration_SDK) DeepCopy() *Integration_SDK {
	if in == nil {
		return nil
	}
	out := new(Integration_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Method) DeepCopyInto(out *Method) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Method.
func (in *Method) DeepCopy() *Method {
	if in == nil {
		return nil
	}
	out := new(Method)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Method) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodList) DeepCopyInto(out *MethodList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Method, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodList.
func (in *MethodList) DeepCopy() *MethodList {
	if in == nil {
		return nil
	}
	out := new(MethodList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *MethodList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodResponse) DeepCopyInto(out *MethodResponse) {
	*out = *in
	if in.ResponseModels != nil {
		in, out := &in.ResponseModels, &out.ResponseModels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ResponseParameters != nil {
		in, out := &in.ResponseParameters, &out.ResponseParameters
		*out = make(map[string]*bool, len(*in))
		for key, val := range *in {
			var outVal *bool
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(bool)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StatusCode != nil {
		in, out := &in.StatusCode, &out.StatusCode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodResponse.
func (in *MethodResponse) DeepCopy() *MethodResponse {
	if in == nil {
		return nil
	}
	out := new(MethodResponse)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodSetting) DeepCopyInto(out *MethodSetting) {
	*out = *in
	if in.CacheDataEncrypted != nil {
		in, out := &in.CacheDataEncrypted, &out.CacheDataEncrypted
		*out = new(bool)
		**out = **in
	}
	if in.CacheTTLInSeconds != nil {
		in, out := &in.CacheTTLInSeconds, &out.CacheTTLInSeconds
		*out = new(int64)
		**out = **in
	}
	if in.CachingEnabled != nil {
		in, out := &in.CachingEnabled, &out.CachingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DataTraceEnabled != nil {
		in, out := &in.DataTraceEnabled, &out.DataTraceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LoggingLevel != nil {
		in, out := &in.LoggingLevel, &out.LoggingLevel
		*out = new(string)
		**out = **in
	}
	if in.MetricsEnabled != nil {
		in, out := &in.MetricsEnabled, &out.MetricsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RequireAuthorizationForCacheControl != nil {
		in, out := &in.RequireAuthorizationForCacheControl, &out.RequireAuthorizationForCacheControl
		*out = new(bool)
		**out = **in
	}
	if in.ThrottlingBurstLimit != nil {
		in, out := &in.ThrottlingBurstLimit, &out.ThrottlingBurstLimit
		*out = new(int64)
		**out = **in
	}
	if in.ThrottlingRateLimit != nil {
		in, out := &in.ThrottlingRateLimit, &out.ThrottlingRateLimit
		*out = new(float64)
		**out = **in
	}
	if in.UnauthorizedCacheControlHeaderStrategy != nil {
		in, out := &in.UnauthorizedCacheControlHeaderStrategy, &out.UnauthorizedCacheControlHeaderStrategy
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodSetting.
func (in *MethodSetting) DeepCopy() *MethodSetting {
	if in == nil {
		return nil
	}
	out := new(MethodSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodSnapshot) DeepCopyInto(out *MethodSnapshot) {
	*out = *in
	if in.APIKeyRequired != nil {
		in, out := &in.APIKeyRequired, &out.APIKeyRequired
		*out = new(bool)
		**out = **in
	}
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodSnapshot.
func (in *MethodSnapshot) DeepCopy() *MethodSnapshot {
	if in == nil {
		return nil
	}
	out := new(MethodSnapshot)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodSpec) DeepCopyInto(out *MethodSpec) {
	*out = *in
	if in.APIKeyRequired != nil {
		in, out := &in.APIKeyRequired, &out.APIKeyRequired
		*out = new(bool)
		**out = **in
	}
	if in.AuthorizationScopes != nil {
		in, out := &in.AuthorizationScopes, &out.AuthorizationScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerID != nil {
		in, out := &in.AuthorizerID, &out.AuthorizerID
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.OperationName != nil {
		in, out := &in.OperationName, &out.OperationName
		*out = new(string)
		**out = **in
	}
	if in.RequestModels != nil {
		in, out := &in.RequestModels, &out.RequestModels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make(map[string]*bool, len(*in))
		for key, val := range *in {
			var outVal *bool
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(bool)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestValidatorID != nil {
		in, out := &in.RequestValidatorID, &out.RequestValidatorID
		*out = new(string)
		**out = **in
	}
	if in.ResourceID != nil {
		in, out := &in.ResourceID, &out.ResourceID
		*out = new(string)
		**out = **in
	}
	if in.ResourceRef != nil {
		in, out := &in.ResourceRef, &out.ResourceRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIRef != nil {
		in, out := &in.RestAPIRef, &out.RestAPIRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodSpec.
func (in *MethodSpec) DeepCopy() *MethodSpec {
	if in == nil {
		return nil
	}
	out := new(MethodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MethodStatus) DeepCopyInto(out *MethodStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.MethodIntegration != nil {
		in, out := &in.MethodIntegration, &out.MethodIntegration
		*out = new(Integration_SDK)
		(*in).DeepCopyInto(*out)
	}
	if in.MethodResponses != nil {
		in, out := &in.MethodResponses, &out.MethodResponses
		*out = make(map[string]*MethodResponse, len(*in))
		for key, val := range *in {
			var outVal *MethodResponse
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(MethodResponse)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MethodStatus.
func (in *MethodStatus) DeepCopy() *MethodStatus {
	if in == nil {
		return nil
	}
	out := new(MethodStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Method_SDK) DeepCopyInto(out *Method_SDK) {
	*out = *in
	if in.APIKeyRequired != nil {
		in, out := &in.APIKeyRequired, &out.APIKeyRequired
		*out = new(bool)
		**out = **in
	}
	if in.AuthorizationScopes != nil {
		in, out := &in.AuthorizationScopes, &out.AuthorizationScopes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AuthorizationType != nil {
		in, out := &in.AuthorizationType, &out.AuthorizationType
		*out = new(string)
		**out = **in
	}
	if in.AuthorizerID != nil {
		in, out := &in.AuthorizerID, &out.AuthorizerID
		*out = new(string)
		**out = **in
	}
	if in.HTTPMethod != nil {
		in, out := &in.HTTPMethod, &out.HTTPMethod
		*out = new(string)
		**out = **in
	}
	if in.MethodIntegration != nil {
		in, out := &in.MethodIntegration, &out.MethodIntegration
		*out = new(Integration_SDK)
		(*in).DeepCopyInto(*out)
	}
	if in.MethodResponses != nil {
		in, out := &in.MethodResponses, &out.MethodResponses
		*out = make(map[string]*MethodResponse, len(*in))
		for key, val := range *in {
			var outVal *MethodResponse
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(MethodResponse)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.OperationName != nil {
		in, out := &in.OperationName, &out.OperationName
		*out = new(string)
		**out = **in
	}
	if in.RequestModels != nil {
		in, out := &in.RequestModels, &out.RequestModels
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestParameters != nil {
		in, out := &in.RequestParameters, &out.RequestParameters
		*out = make(map[string]*bool, len(*in))
		for key, val := range *in {
			var outVal *bool
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(bool)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RequestValidatorID != nil {
		in, out := &in.RequestValidatorID, &out.RequestValidatorID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Method_SDK.
func (in *Method_SDK) DeepCopy() *Method_SDK {
	if in == nil {
		return nil
	}
	out := new(Method_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Model) DeepCopyInto(out *Model) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Schema != nil {
		in, out := &in.Schema, &out.Schema
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Model.
func (in *Model) DeepCopy() *Model {
	if in == nil {
		return nil
	}
	out := new(Model)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MutualTLSAuthentication) DeepCopyInto(out *MutualTLSAuthentication) {
	*out = *in
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreVersion != nil {
		in, out := &in.TruststoreVersion, &out.TruststoreVersion
		*out = new(string)
		**out = **in
	}
	if in.TruststoreWarnings != nil {
		in, out := &in.TruststoreWarnings, &out.TruststoreWarnings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MutualTLSAuthentication.
func (in *MutualTLSAuthentication) DeepCopy() *MutualTLSAuthentication {
	if in == nil {
		return nil
	}
	out := new(MutualTLSAuthentication)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MutualTLSAuthenticationInput) DeepCopyInto(out *MutualTLSAuthenticationInput) {
	*out = *in
	if in.TruststoreURI != nil {
		in, out := &in.TruststoreURI, &out.TruststoreURI
		*out = new(string)
		**out = **in
	}
	if in.TruststoreVersion != nil {
		in, out := &in.TruststoreVersion, &out.TruststoreVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MutualTLSAuthenticationInput.
func (in *MutualTLSAuthenticationInput) DeepCopy() *MutualTLSAuthenticationInput {
	if in == nil {
		return nil
	}
	out := new(MutualTLSAuthenticationInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatchOperation) DeepCopyInto(out *PatchOperation) {
	*out = *in
	if in.From != nil {
		in, out := &in.From, &out.From
		*out = new(string)
		**out = **in
	}
	if in.Op != nil {
		in, out := &in.Op, &out.Op
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatchOperation.
func (in *PatchOperation) DeepCopy() *PatchOperation {
	if in == nil {
		return nil
	}
	out := new(PatchOperation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QuotaSettings) DeepCopyInto(out *QuotaSettings) {
	*out = *in
	if in.Limit != nil {
		in, out := &in.Limit, &out.Limit
		*out = new(int64)
		**out = **in
	}
	if in.Offset != nil {
		in, out := &in.Offset, &out.Offset
		*out = new(int64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QuotaSettings.
func (in *QuotaSettings) DeepCopy() *QuotaSettings {
	if in == nil {
		return nil
	}
	out := new(QuotaSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Resource) DeepCopyInto(out *Resource) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Resource.
func (in *Resource) DeepCopy() *Resource {
	if in == nil {
		return nil
	}
	out := new(Resource)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Resource) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceList) DeepCopyInto(out *ResourceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Resource, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceList.
func (in *ResourceList) DeepCopy() *ResourceList {
	if in == nil {
		return nil
	}
	out := new(ResourceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ResourceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceSpec) DeepCopyInto(out *ResourceSpec) {
	*out = *in
	if in.ParentID != nil {
		in, out := &in.ParentID, &out.ParentID
		*out = new(string)
		**out = **in
	}
	if in.ParentRef != nil {
		in, out := &in.ParentRef, &out.ParentRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
	if in.PathPart != nil {
		in, out := &in.PathPart, &out.PathPart
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIRef != nil {
		in, out := &in.RestAPIRef, &out.RestAPIRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceSpec.
func (in *ResourceSpec) DeepCopy() *ResourceSpec {
	if in == nil {
		return nil
	}
	out := new(ResourceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceStatus) DeepCopyInto(out *ResourceStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceStatus.
func (in *ResourceStatus) DeepCopy() *ResourceStatus {
	if in == nil {
		return nil
	}
	out := new(ResourceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Resource_SDK) DeepCopyInto(out *Resource_SDK) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ParentID != nil {
		in, out := &in.ParentID, &out.ParentID
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.PathPart != nil {
		in, out := &in.PathPart, &out.PathPart
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Resource_SDK.
func (in *Resource_SDK) DeepCopy() *Resource_SDK {
	if in == nil {
		return nil
	}
	out := new(Resource_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPI) DeepCopyInto(out *RestAPI) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPI.
func (in *RestAPI) DeepCopy() *RestAPI {
	if in == nil {
		return nil
	}
	out := new(RestAPI)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RestAPI) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPIList) DeepCopyInto(out *RestAPIList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RestAPI, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPIList.
func (in *RestAPIList) DeepCopy() *RestAPIList {
	if in == nil {
		return nil
	}
	out := new(RestAPIList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RestAPIList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPISpec) DeepCopyInto(out *RestAPISpec) {
	*out = *in
	if in.APIKeySource != nil {
		in, out := &in.APIKeySource, &out.APIKeySource
		*out = new(string)
		**out = **in
	}
	if in.BinaryMediaTypes != nil {
		in, out := &in.BinaryMediaTypes, &out.BinaryMediaTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CloneFrom != nil {
		in, out := &in.CloneFrom, &out.CloneFrom
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableExecuteAPIEndpoint != nil {
		in, out := &in.DisableExecuteAPIEndpoint, &out.DisableExecuteAPIEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(EndpointConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.MinimumCompressionSize != nil {
		in, out := &in.MinimumCompressionSize, &out.MinimumCompressionSize
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPISpec.
func (in *RestAPISpec) DeepCopy() *RestAPISpec {
	if in == nil {
		return nil
	}
	out := new(RestAPISpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPIStatus) DeepCopyInto(out *RestAPIStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RootResourceID != nil {
		in, out := &in.RootResourceID, &out.RootResourceID
		*out = new(string)
		**out = **in
	}
	if in.Warnings != nil {
		in, out := &in.Warnings, &out.Warnings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPIStatus.
func (in *RestAPIStatus) DeepCopy() *RestAPIStatus {
	if in == nil {
		return nil
	}
	out := new(RestAPIStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RestAPI_SDK) DeepCopyInto(out *RestAPI_SDK) {
	*out = *in
	if in.APIKeySource != nil {
		in, out := &in.APIKeySource, &out.APIKeySource
		*out = new(string)
		**out = **in
	}
	if in.BinaryMediaTypes != nil {
		in, out := &in.BinaryMediaTypes, &out.BinaryMediaTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisableExecuteAPIEndpoint != nil {
		in, out := &in.DisableExecuteAPIEndpoint, &out.DisableExecuteAPIEndpoint
		*out = new(bool)
		**out = **in
	}
	if in.EndpointConfiguration != nil {
		in, out := &in.EndpointConfiguration, &out.EndpointConfiguration
		*out = new(EndpointConfiguration)
		(*in).DeepCopyInto(*out)
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MinimumCompressionSize != nil {
		in, out := &in.MinimumCompressionSize, &out.MinimumCompressionSize
		*out = new(int64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.RootResourceID != nil {
		in, out := &in.RootResourceID, &out.RootResourceID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
	if in.Warnings != nil {
		in, out := &in.Warnings, &out.Warnings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RestAPI_SDK.
func (in *RestAPI_SDK) DeepCopy() *RestAPI_SDK {
	if in == nil {
		return nil
	}
	out := new(RestAPI_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SDKConfigurationProperty) DeepCopyInto(out *SDKConfigurationProperty) {
	*out = *in
	if in.DefaultValue != nil {
		in, out := &in.DefaultValue, &out.DefaultValue
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Required != nil {
		in, out := &in.Required, &out.Required
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SDKConfigurationProperty.
func (in *SDKConfigurationProperty) DeepCopy() *SDKConfigurationProperty {
	if in == nil {
		return nil
	}
	out := new(SDKConfigurationProperty)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SDKType) DeepCopyInto(out *SDKType) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FriendlyName != nil {
		in, out := &in.FriendlyName, &out.FriendlyName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SDKType.
func (in *SDKType) DeepCopy() *SDKType {
	if in == nil {
		return nil
	}
	out := new(SDKType)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stage) DeepCopyInto(out *Stage) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stage.
func (in *Stage) DeepCopy() *Stage {
	if in == nil {
		return nil
	}
	out := new(Stage)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Stage) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageKey) DeepCopyInto(out *StageKey) {
	*out = *in
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageKey.
func (in *StageKey) DeepCopy() *StageKey {
	if in == nil {
		return nil
	}
	out := new(StageKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageList) DeepCopyInto(out *StageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Stage, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageList.
func (in *StageList) DeepCopy() *StageList {
	if in == nil {
		return nil
	}
	out := new(StageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageSpec) DeepCopyInto(out *StageSpec) {
	*out = *in
	if in.CacheClusterEnabled != nil {
		in, out := &in.CacheClusterEnabled, &out.CacheClusterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheClusterSize != nil {
		in, out := &in.CacheClusterSize, &out.CacheClusterSize
		*out = new(string)
		**out = **in
	}
	if in.CanarySettings != nil {
		in, out := &in.CanarySettings, &out.CanarySettings
		*out = new(CanarySettings)
		(*in).DeepCopyInto(*out)
	}
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentationVersion != nil {
		in, out := &in.DocumentationVersion, &out.DocumentationVersion
		*out = new(string)
		**out = **in
	}
	if in.RestAPIID != nil {
		in, out := &in.RestAPIID, &out.RestAPIID
		*out = new(string)
		**out = **in
	}
	if in.RestAPIRef != nil {
		in, out := &in.RestAPIRef, &out.RestAPIRef
		*out = new(corev1alpha1.AWSResourceReferenceWrapper)
		(*in).DeepCopyInto(*out)
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TracingEnabled != nil {
		in, out := &in.TracingEnabled, &out.TracingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageSpec.
func (in *StageSpec) DeepCopy() *StageSpec {
	if in == nil {
		return nil
	}
	out := new(StageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageStatus) DeepCopyInto(out *StageStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.AccessLogSettings != nil {
		in, out := &in.AccessLogSettings, &out.AccessLogSettings
		*out = new(AccessLogSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.CacheClusterStatus != nil {
		in, out := &in.CacheClusterStatus, &out.CacheClusterStatus
		*out = new(string)
		**out = **in
	}
	if in.ClientCertificateID != nil {
		in, out := &in.ClientCertificateID, &out.ClientCertificateID
		*out = new(string)
		**out = **in
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.LastUpdatedDate != nil {
		in, out := &in.LastUpdatedDate, &out.LastUpdatedDate
		*out = (*in).DeepCopy()
	}
	if in.MethodSettings != nil {
		in, out := &in.MethodSettings, &out.MethodSettings
		*out = make(map[string]*MethodSetting, len(*in))
		for key, val := range *in {
			var outVal *MethodSetting
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(MethodSetting)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.WebACLARN != nil {
		in, out := &in.WebACLARN, &out.WebACLARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageStatus.
func (in *StageStatus) DeepCopy() *StageStatus {
	if in == nil {
		return nil
	}
	out := new(StageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Stage_SDK) DeepCopyInto(out *Stage_SDK) {
	*out = *in
	if in.AccessLogSettings != nil {
		in, out := &in.AccessLogSettings, &out.AccessLogSettings
		*out = new(AccessLogSettings)
		(*in).DeepCopyInto(*out)
	}
	if in.CacheClusterEnabled != nil {
		in, out := &in.CacheClusterEnabled, &out.CacheClusterEnabled
		*out = new(bool)
		**out = **in
	}
	if in.CacheClusterSize != nil {
		in, out := &in.CacheClusterSize, &out.CacheClusterSize
		*out = new(string)
		**out = **in
	}
	if in.CacheClusterStatus != nil {
		in, out := &in.CacheClusterStatus, &out.CacheClusterStatus
		*out = new(string)
		**out = **in
	}
	if in.CanarySettings != nil {
		in, out := &in.CanarySettings, &out.CanarySettings
		*out = new(CanarySettings)
		(*in).DeepCopyInto(*out)
	}
	if in.ClientCertificateID != nil {
		in, out := &in.ClientCertificateID, &out.ClientCertificateID
		*out = new(string)
		**out = **in
	}
	if in.CreatedDate != nil {
		in, out := &in.CreatedDate, &out.CreatedDate
		*out = (*in).DeepCopy()
	}
	if in.DeploymentID != nil {
		in, out := &in.DeploymentID, &out.DeploymentID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DocumentationVersion != nil {
		in, out := &in.DocumentationVersion, &out.DocumentationVersion
		*out = new(string)
		**out = **in
	}
	if in.LastUpdatedDate != nil {
		in, out := &in.LastUpdatedDate, &out.LastUpdatedDate
		*out = (*in).DeepCopy()
	}
	if in.MethodSettings != nil {
		in, out := &in.MethodSettings, &out.MethodSettings
		*out = make(map[string]*MethodSetting, len(*in))
		for key, val := range *in {
			var outVal *MethodSetting
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(MethodSetting)
				(*in).DeepCopyInto(*out)
			}
			(*out)[key] = outVal
		}
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TracingEnabled != nil {
		in, out := &in.TracingEnabled, &out.TracingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Variables != nil {
		in, out := &in.Variables, &out.Variables
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.WebACLARN != nil {
		in, out := &in.WebACLARN, &out.WebACLARN
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Stage_SDK.
func (in *Stage_SDK) DeepCopy() *Stage_SDK {
	if in == nil {
		return nil
	}
	out := new(Stage_SDK)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSConfig) DeepCopyInto(out *TLSConfig) {
	*out = *in
	if in.InsecureSkipVerification != nil {
		in, out := &in.InsecureSkipVerification, &out.InsecureSkipVerification
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSConfig.
func (in *TLSConfig) DeepCopy() *TLSConfig {
	if in == nil {
		return nil
	}
	out := new(TLSConfig)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ThrottleSettings) DeepCopyInto(out *ThrottleSettings) {
	*out = *in
	if in.BurstLimit != nil {
		in, out := &in.BurstLimit, &out.BurstLimit
		*out = new(int64)
		**out = **in
	}
	if in.RateLimit != nil {
		in, out := &in.RateLimit, &out.RateLimit
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ThrottleSettings.
func (in *ThrottleSettings) DeepCopy() *ThrottleSettings {
	if in == nil {
		return nil
	}
	out := new(ThrottleSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlan) DeepCopyInto(out *UsagePlan) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProductCode != nil {
		in, out := &in.ProductCode, &out.ProductCode
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlan.
func (in *UsagePlan) DeepCopy() *UsagePlan {
	if in == nil {
		return nil
	}
	out := new(UsagePlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UsagePlanKey) DeepCopyInto(out *UsagePlanKey) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UsagePlanKey.
func (in *UsagePlanKey) DeepCopy() *UsagePlanKey {
	if in == nil {
		return nil
	}
	out := new(UsagePlanKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLink) DeepCopyInto(out *VPCLink) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLink.
func (in *VPCLink) DeepCopy() *VPCLink {
	if in == nil {
		return nil
	}
	out := new(VPCLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCLink) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLinkList) DeepCopyInto(out *VPCLinkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VPCLink, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLinkList.
func (in *VPCLinkList) DeepCopy() *VPCLinkList {
	if in == nil {
		return nil
	}
	out := new(VPCLinkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VPCLinkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLinkSpec) DeepCopyInto(out *VPCLinkSpec) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetARNs != nil {
		in, out := &in.TargetARNs, &out.TargetARNs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLinkSpec.
func (in *VPCLinkSpec) DeepCopy() *VPCLinkSpec {
	if in == nil {
		return nil
	}
	out := new(VPCLinkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLinkStatus) DeepCopyInto(out *VPCLinkStatus) {
	*out = *in
	if in.ACKResourceMetadata != nil {
		in, out := &in.ACKResourceMetadata, &out.ACKResourceMetadata
		*out = new(corev1alpha1.ResourceMetadata)
		(*in).DeepCopyInto(*out)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]*corev1alpha1.Condition, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(corev1alpha1.Condition)
				(*in).DeepCopyInto(*out)
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StatusMessage != nil {
		in, out := &in.StatusMessage, &out.StatusMessage
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLinkStatus.
func (in *VPCLinkStatus) DeepCopy() *VPCLinkStatus {
	if in == nil {
		return nil
	}
	out := new(VPCLinkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VPCLink_SDK) DeepCopyInto(out *VPCLink_SDK) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StatusMessage != nil {
		in, out := &in.StatusMessage, &out.StatusMessage
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TargetARNs != nil {
		in, out := &in.TargetARNs, &out.TargetARNs
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VPCLink_SDK.
func (in *VPCLink_SDK) DeepCopy() *VPCLink_SDK {
	if in == nil {
		return nil
	}
	out := new(VPCLink_SDK)
	in.DeepCopyInto(out)
	return out
}
