// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ApiIntegrationResponseSpec defines the desired state of ApiIntegrationResponse.
type APIIntegrationResponseSpec struct {

	// Specifies how to handle response payload content type conversions. Supported
	// values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
	//
	// If this property is not defined, the response payload will be passed through
	// from the integration response to the method response without modification.
	ContentHandling *string `json:"contentHandling,omitempty"`
	// Specifies a put integration response request's HTTP method.
	// +kubebuilder:validation:XValidation:rule="self == oldSelf",message="Value is immutable once set"
	// +kubebuilder:validation:Required
	HTTPMethod *string `json:"httpMethod"`
	// Specifies a put integration response request's resource identifier.
	// +kubebuilder:validation:XValidation:rule="self == oldSelf",message="Value is immutable once set"
	ResourceID  *string                                  `json:"resourceID,omitempty"`
	ResourceRef *ackv1alpha1.AWSResourceReferenceWrapper `json:"resourceRef,omitempty"`
	// A key-value map specifying response parameters that are passed to the method
	// response from the back end. The key is a method response header parameter
	// name and the mapped value is an integration response header value, a static
	// value enclosed within a pair of single quotes, or a JSON expression from
	// the integration response body. The mapping key must match the pattern of
	// method.response.header.{name}, where name is a valid and unique header name.
	// The mapped non-static value must match the pattern of integration.response.header.{name}
	// or integration.response.body.{JSON-expression}, where name must be a valid
	// and unique response header name and JSON-expression a valid JSON expression
	// without the $ prefix.
	ResponseParameters map[string]*string `json:"responseParameters,omitempty"`
	// Specifies a put integration response's templates.
	ResponseTemplates map[string]*string `json:"responseTemplates,omitempty"`
	// The string identifier of the associated RestApi.
	// +kubebuilder:validation:XValidation:rule="self == oldSelf",message="Value is immutable once set"
	RestAPIID  *string                                  `json:"restAPIID,omitempty"`
	RestAPIRef *ackv1alpha1.AWSResourceReferenceWrapper `json:"restAPIRef,omitempty"`
	// Specifies the selection pattern of a put integration response.
	SelectionPattern *string `json:"selectionPattern,omitempty"`
	// Specifies the status code that is used to map the integration response to
	// an existing MethodResponse.
	// +kubebuilder:validation:XValidation:rule="self == oldSelf",message="Value is immutable once set"
	// +kubebuilder:validation:Required
	StatusCode *string `json:"statusCode"`
}

// APIIntegrationResponseStatus defines the observed state of APIIntegrationResponse
type APIIntegrationResponseStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRs managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
}

// APIIntegrationResponse is the Schema for the APIIntegrationResponses API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type APIIntegrationResponse struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              APIIntegrationResponseSpec   `json:"spec,omitempty"`
	Status            APIIntegrationResponseStatus `json:"status,omitempty"`
}

// APIIntegrationResponseList contains a list of APIIntegrationResponse
// +kubebuilder:object:root=true
type APIIntegrationResponseList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []APIIntegrationResponse `json:"items"`
}

func init() {
	SchemeBuilder.Register(&APIIntegrationResponse{}, &APIIntegrationResponseList{})
}
